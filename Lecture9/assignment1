
interface Two_D_Shape {

    float PI = 3.14f;


    void parameters();
    float area();
    float perimeter();
}


interface Three_D_Shape {

    float volume();
}


class Triangle implements Two_D_Shape {
  
    float sideA, sideB, sideC, height;

 
    public Triangle(float a, float b, float c, float h) {
        sideA = a;
        sideB = b;
        sideC = c;
        height = h;
        System.out.println("A new triangle is created");
    }


    public boolean rectangular() {
     
        return (sideA * sideA + sideB * sideB == sideC * sideC ||
                sideA * sideA + sideC * sideC == sideB * sideB ||
                sideB * sideB + sideC * sideC == sideA * sideA);
    }


    public void parameters() {
        System.out.println("Triangle parameters: sideA = " + sideA + ", sideB = " + sideB + ", sideC = " + sideC + ", height = " + height);
    }

    public float area() {
        return 0.5f * sideB * height;
    }

    public float perimeter() {
        return sideA + sideB + sideC;
    }
}


class Sphere implements Two_D_Shape, Three_D_Shape {

    float radius;


    public Sphere(float r) {
        radius = r;
        System.out.println("A new sphere has been created");
    }

   
    public void parameters() {
        System.out.println("Sphere parameters: radius = " + radius);
    }

    public float area() {
        return 4 * PI * radius * radius;
    }

    public float perimeter() {
        return 0; // Not applicable for a sphere
    }

   
    public float volume() {
        return (4/3) * PI * radius * radius * radius;
    }
}

public class Main {
    public static void main(String[] args) {
        
        Triangle T1 = new Triangle(3, 5, 6, 3);
        Sphere B1 = new Sphere(4);
        Two_D_Shape T2 = new Triangle
 
